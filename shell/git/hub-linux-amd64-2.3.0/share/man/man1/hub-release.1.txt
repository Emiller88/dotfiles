hub‐release(1) ‐‐ Manage GitHub releases.  ===

## SYNOPSIS

‘hub   release‘  [‐‐include‐drafts]  [‐‐exclude‐prereleases]  [‐L
<LIMIT>] ‘hub release‘ show <TAG> ‘hub	release‘  create  [‐dpoc]
[‐a <FILE>] [‐m <MESSAGE>|‐F <FILE>] [‐t <TARGET>] <TAG> ‘hub re‐
lease‘ edit [<options>] <TAG> ‘hub release‘ delete <TAG>


## COMMANDS

With no arguments, shows a list of existing releases.

With ‘‐‐include‐drafts‘, include draft releases in  the  listing.
With  ‘‐‐exclude‐prereleases‘,	exclude  non‐stable releases from
the listing.

  * _show_:
    Show GitHub release notes for <TAG>.

    With ‘‐‐show‐downloads‘, include the "Downloads" section.

  * _create_:
    Create a GitHub release for the specified <TAG> name. If  git
tag <TAG>
    doesn‘t  exist, it will be created at <TARGET> (default: cur‐
rent branch).

  * _edit_:
    Edit the GitHub release for the specified <TAG> name. Accepts
the same
    options   as   _create_   command.	 Publish   a  draft  with
‘‐‐draft=false‘.

    When <MESSAGE> or <FILE> are not  specified,  a  text  editor
will open
    pre‐populated  with current release title and body. To re‐use
existing title
    and body unchanged, pass ‘‐m ""‘.

  * _download_:
    Download the assets attached to  release  for  the	specified
<TAG>.

  * _delete_:
    Delete  the  release  and associated assets for the specified
<TAG>.

## OPTIONS
  * ‐L, ‐‐limit:
    Display only the first <LIMIT> releases.

  * ‐d, ‐‐draft:
    Create a draft release.

  * ‐p, ‐‐prerelease:
    Create a pre‐release.

  * ‐a, ‐‐asset <FILE>:
    Attach a file as an asset for this release.

    If <FILE> is in the "<filename>#<text>" format, the text  af‐
ter the ‘#‘
    character is taken as asset label.

  * ‐m, ‐‐message <MESSAGE>:
    Use  the  first  line  of <MESSAGE> as release title, and the
rest as release description.

  * ‐F, ‐‐file <FILE>:
    Read the release title and description from <FILE>.

  * ‐e, ‐‐edit:
    Further edit the contents of <FILE> in a text  editor  before
submitting.

  * ‐o, ‐‐browse:
    Open the new release in a web browser.

  * ‐c, ‐‐copy:
    Put the URL of the new release to clipboard instead of print‐
ing it.

  * ‐t, ‐‐commitish <TARGET>:
    A commit SHA or branch name to attach the  release	to,  only
used if <TAG>
    doesn‘t already exist (default: main branch).

  * <TAG>:
    The git tag name for this release.

## SEE ALSO

hub(1), git‐tag(1)





































